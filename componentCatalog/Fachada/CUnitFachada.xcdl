<?xml version="1.0" encoding="UTF-8"?>
<?fuego version="6.5.2" build="100141"?>
<component name="CUnitFachada" description="" versionID="Version 6.5 " flags="cloneable replaceable cunit_suite" type="xobject">
	<inherit class="Any" flags="public"/>
	<inherit class="Fuego.Internal.FuegoObject" flags="public hidden"/>
	<inherit class="Fuego.Internal.XODelegate" flags="public delegated hidden"/>
	<inherit class="Fuego.Test.CUnitSuite" flags="public"/>
	<objectProperty name="generateBitSets" value="true"/>
	<objectProperty name="generateStubs" value="true"/>
	<objectProperty name="packagePrefix" value="xobject"/>
	<attributes/>
	<methods>
		<method name="CUnitFachada" flags="static clientavailable">
			<outputArgument name="return" description="" flags="retval" type="Fachada.CUnitFachada"/>
			<sourceCode language="Java1"/>
		</method>
		<method name="testAsignacionMasivaAnalistas" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NAsignacionMasivaAnalistas objNegocio;
NSolicitud objNegocioSolicitud;

FAsignacionMasivaAnalistas fachada = new FAsignacionMasivaAnalistas();
FSolicitud solicitud = new FSolicitud();

int idSolicitud;
int nroCesta;
String descripcionNecesidad;
Time fechaEnvio;
String areaSolicitante;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

//------------------------------------------------------------------------------------------------------------------
//NULL-NULL
this.log(message : &quot;Test fachada.getLastValue() NULL-NULL&quot;);
respuesta = fachada.getValues(id : null, nroCesta : null, fechaEnvioDesde : &apos;now&apos;, fechaEnvioHasta : &apos;now&apos;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

//------------------------------------------------------------------------------------------------------------------
//1-NULL
this.log(message : &quot;Test fachada.getLastValue() 1-NULL&quot;);
respuesta = fachada.getValues(id : 1, nroCesta : 1, fechaEnvioDesde : &apos;now&apos;, fechaEnvioHasta : &apos;now&apos;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

//------------------------------------------------------------------------------------------------------------------
//NULL-1
this.log(message : &quot;Test fachada.getLastValue() NULL-1&quot;);
respuesta = fachada.getValues(id : 1, nroCesta : 1, fechaEnvioDesde : &apos;now&apos;, fechaEnvioHasta : &apos;now&apos;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

//------------------------------------------------------------------------------------------------------------------
//1-1
this.log(message : &quot;Test fachada.getLastValue() 1-1&quot;);
respuesta = fachada.getValues(id : 1, nroCesta : 1, fechaEnvioDesde : &apos;now&apos;, fechaEnvioHasta : &apos;now&apos;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFAntecedentes" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NAntecedentes objNegocio;
NSolicitud objNegocioSolicitud;

FAntecedentes fachada = new FAntecedentes();
FSolicitud solicitud = new FSolicitud();

int id;
int idSol;
int idCso;
int idCar;
int idMfp;
int idTor;
int idEag;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
//objNegocioSolicitud.areaGestorSte.id = null;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSol;
objNegocio.tieneAntecedentes = true;
objNegocio.incrementoCantidad = true;
objNegocio.incrementoPrecio = true;
objNegocio.justificacionInCantidad = &quot;TEST&quot;;
objNegocio.justificacionInPrecio = &quot;TEST&quot;;


respuesta = fachada.setValue(objNegocio : objNegocio, solicitudNueva : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAntecedentes)respuesta.contenido;
this.log(message : &quot;idSolicitud &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(idSolicitud : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAntecedentes)respuesta.contenido;
id = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(idSolicitud : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);</sourceCode>
		</method>
		<method name="testFAreaSolicitante" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NAreaSolicitante objNegocio;
FAreaSolicitante fachada = new FAreaSolicitante();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAreaSolicitante)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAreaSolicitante)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAreaSolicitante)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFAsignacion" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NAsignacion objNegocio;
NSolicitud objNegocioSolicitud;

FAsignacion fachada = new FAsignacion();
FSolicitud solicitud = new FSolicitud();

int id;
int idSol;
String motivoReAsignacion;
Time fecha;
String asignado;
String rol;
String asignador;
String tipo;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
//objNegocioSolicitud.areaGestorSte.id = 1;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
//objNegocio.estado.id = 1;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;


respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;idSolicitud &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSol;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAsignacion)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAsignacion)respuesta.contenido;
id = objNegocio.id;
idSol = 20;
motivoReAsignacion = objNegocio.motivoReAsignacion;
fecha = objNegocio.fecha;
asignado = objNegocio.asignado;
rol = objNegocio.rol;
asignador = objNegocio.asignador;
tipo = objNegocio.tipo;

this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFAsignacionParticipante" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NAsignacionParticipante objNegocio;
NSolicitud objNegocioSolicitud;

FAsignacionParticipante fachada = new FAsignacionParticipante();
FSolicitud solicitud = new FSolicitud();

int idSol;
String analista;
String gerenteCompras;
String controller;
String intervencion;
String jefeCompras;
String comprador;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSol;
objNegocio.analista = &quot;TEST&quot;;
objNegocio.gerenteCompras = &quot;TEST&quot;;
objNegocio.controller = &quot;TEST&quot;;
objNegocio.intervencion = &quot;TEST&quot;;
objNegocio.jefeCompras = &quot;TEST&quot;;
objNegocio.comprador = &quot;TEST&quot;;


respuesta = fachada.setValue(objNegocio : objNegocio, nuevaSolicitud : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAsignacionParticipante)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;idSolicitud &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

respuesta = fachada.setValue(objNegocio : objNegocio, nuevaSolicitud : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(idSol : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NAsignacionParticipante)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(idSol : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);</sourceCode>
		</method>
		<method name="testFCalificacionSolicitud" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NCalificacionSolicitud objNegocio;
FCalificacionSolicitud fachada = new FCalificacionSolicitud();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCalificacionSolicitud)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCalificacionSolicitud)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCalificacionSolicitud)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFCategoriaCesta" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NCategoriaCesta objNegocio;
FCategoriaCesta fachada = new FCategoriaCesta();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCategoriaCesta)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCategoriaCesta)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCategoriaCesta)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFCategoriaProducto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NCategoriaProducto objNegocio;
FCategoriaProducto fachada = new FCategoriaProducto();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCategoriaProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCategoriaProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NCategoriaProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFClasificacionArea" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NClasificacionArea objNegocio;
FClasificacionArea fachada = new FClasificacionArea();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NClasificacionArea)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NClasificacionArea)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NClasificacionArea)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFComentario" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
Respuesta respuesta2;
NComentario objNegocio;
FComentario fachada = new FComentario();
int id, idSolicitud; 

NSolicitud objNegocio2;
FSolicitud fachada2 = new FSolicitud();
NSolicitudEstado objNegocio3;
FSolicitudEstado fachada3 = new FSolicitudEstado();


this.log(message : &quot;Test fachada2.setValue()&quot;);
respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.getLastValue()&quot;);
respuesta2 = fachada2.getLastValue();
this.assertTrue(b : respuesta2.resultado==OK);
idSolicitud = objNegocio2.id;
this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);

//solicitudEstado
this.log(message : &quot;Ingreso solicitudEstado&quot;);
objNegocio3.idSolicitud = idSolicitud;
objNegocio3.idEstadoSolicitud = 1;
objNegocio3.usuarioAlta = &quot;Test&quot;;
respuesta2 = fachada3.setValue(objNegocio : objNegocio3);
respuesta2 = fachada3.getLastValue();
objNegocio3 = (NSolicitudEstado)respuesta2.contenido;
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSolicitud;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NComentario)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NComentario)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id  );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValuesForIdSolicitud()&quot;);
respuesta = fachada.getListValuesForIdSolicitud(idSolicitud : idSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


//deleteSolicitudEstado
this.log(message : &quot;Test fachada3.deleteValue() (SolicitudEstado)&quot;);
respuesta2 = fachada3.deleteValue(id : objNegocio3.id);

this.log(message : &quot;Test fachada2.deleteValue()&quot;);
respuesta2 = fachada2.deleteValue(id : id);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFComprasParticulares" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NComprasParticulares objNegocio;
NSolicitud objNegocioSolicitud;

FComprasParticulares fachada = new FComprasParticulares();
FSolicitud solicitud = new FSolicitud();

int idSol;
int idCso;
int idCar;
int idMfp;
int idTor;
int idEag;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSol;
objNegocio.listaComprasParticulares.id = null;
objNegocio.aproComitePatrocinadores = true;
objNegocio.promotorGasto = &quot;TESTPROMOTOR&quot;;
objNegocio.expCondPatrocinio = &quot;S&quot;;
objNegocio.comentariosPatrocinio = &quot;TESTCOM&quot;;
objNegocio.aprobadoRRHH = true;
objNegocio.productoServicio = &quot;TESTPRODSERV&quot;;
objNegocio.gastoPresupuestoPesos = 1;
objNegocio.gastoPresupuestoDolares = 1;
objNegocio.gastoPresupuestoEuros = 1;
objNegocio.ingresosPresupuestoPesos = 1;
objNegocio.ingresosPresupuestoDolares = 1;
objNegocio.ingresosPresupuestoEuros = 1;
objNegocio.overBooking = &quot;1&quot;;
objNegocio.margenProducto = &quot;TESTMARGEN&quot;;
objNegocio.mantieneMargenAnterior = true;
objNegocio.gastoEjAnteriorPesos = 1;
objNegocio.gastoEjAnteriorDolares = 1;
objNegocio.gastoEjAnteriorEuros = 1;
objNegocio.comentariosReventa = &quot;TESTCOMEN+&quot;;


respuesta = fachada.setValue(objNegocio : objNegocio, nuevaSolicitud : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NComprasParticulares)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;idSolicitud &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(idSol : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NComprasParticulares)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(idSol : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);</sourceCode>
		</method>
		<method name="testFControlGestion" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NControlGestion objNegocio;
NSolicitud objNegocioSolicitud;

FControlGestion fachada = new FControlGestion();
FSolicitud solicitud = new FSolicitud();

int id;
int idCso;
int idCar;
int idMfp;
int idTor;
int idEag;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
//objNegocioSolicitud.areaGestorSte.id = 1;
objNegocioSolicitud.categoriaCesta.id = 1;
objNegocioSolicitud.categoriaProducto.id = 1;
objNegocioSolicitud.destinoCompra.id = 1;
//objNegocio.estado.id = 1;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = 1;
objNegocioSolicitud.subtipoProducto.id = 1;
objNegocioSolicitud.tipoCompra.id = 1;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
id = objNegocioSolicitud.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = id;
objNegocio.idRelacionada = 1;
objNegocio.nombreNecesidad = &quot;Test&quot;;
//objNegocio.calificacionSolicitud.id = null;
//objNegocio.clasificacionArea.id = null;
objNegocio.fueraProceso = true;
//objNegocio.motivoFueraProceso.id = null;
//objNegocio.tipoOrden.id = null;
//objNegocio.estadoAgendamiento.id = null;
objNegocio.rechazadoCompras = &apos;S&apos;;
objNegocio.modificadoPorPedido = &apos;S&apos;;
objNegocio.requisitosCompras = &quot;S&quot;;
objNegocio.condicionamientoProveedor = &quot;S&quot;;
objNegocio.analisisSagi = &quot;TEST&quot;;


respuesta = fachada.setValue(objNegocio : objNegocio, solicitudNueva : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NControlGestion)respuesta.contenido;
id = objNegocio.idSolicitud;
this.log(message : &quot;idSolicitud &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NControlGestion)respuesta.contenido;
id = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFDestinoCompra" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NDestinoCompra objNegocio;
FDestinoCompra fachada = new FDestinoCompra();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NDestinoCompra)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NDestinoCompra)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NDestinoCompra)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFEasyDoc" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
FEasyDoc fachada = new FEasyDoc();

int desde = 1100;
int hasta = 1110;

for (int index = desde; index &lt; hasta; index++) {

	this.log(message : &quot;Test fachada.getToken()&quot;);
	respuesta = fachada.getToken(nroReg : index+1, 
								  idDoc : 1, 
								  version : 1, 
								  usuario : &quot;test&quot;);
	this.log(message : &quot;Resultado &quot;+respuesta.resultado);
	this.log(message : &quot;Contenido &quot;+respuesta.contenido);
	String token = (String)respuesta.contenido;
	this.assertTrue(b : respuesta.resultado==OK); 
	this.log(message : &quot;&quot;);   
	
	this.log(message : &quot;Test fachada.uploadFile()&quot;);
	Binary binario = BinaryFile.readToBinaryFrom(name : &quot;C://Hipo.PDF&quot;);
	respuesta = fachada.uploadFile(archivo : binario, 
									token : token, 
									tipoArchivo : &quot;PDF&quot;);
	this.log(message : &quot;Resultado &quot;+respuesta.resultado);
	this.log(message : &quot;Contenido &quot;+respuesta.contenido);
	this.assertTrue(b : respuesta.resultado==OK);
	this.log(message : &quot;&quot;); 

}

this.pause(milliseconds : 100);

for (int index = desde; index &lt; hasta; index++) {

	this.log(message : &quot;Test fachada.getToken()&quot;);
	respuesta = fachada.getToken(nroReg : index+1, 
								  idDoc : 1, 
								  version : 1, 
								  usuario : &quot;test&quot;);
	this.log(message : &quot;Resultado &quot;+respuesta.resultado);
	this.log(message : &quot;Contenido &quot;+respuesta.contenido);
	String token = (String)respuesta.contenido;
	this.assertTrue(b : respuesta.resultado==OK); 
	this.log(message : &quot;&quot;); 
	
	this.log(message : &quot;Test fachada.existFile()&quot;);
	respuesta = fachada.existFile(nroReg : 1, idDoc : 1, version : 1, token : token);
	this.log(message : &quot;Resultado &quot;+respuesta.resultado);
	this.log(message : &quot;Contenido &quot;+respuesta.contenido);
	this.assertTrue(b : respuesta.resultado==OK);
	this.log(message : &quot;&quot;); 

}

this.pause(milliseconds : 100);

for (int index = desde; index &lt; hasta; index++) {

	this.log(message : &quot;Test fachada.getToken()&quot;);
	respuesta = fachada.getToken(nroReg : index+1, 
								  idDoc : 1, 
								  version : 1, 
								  usuario : &quot;test&quot;);
	this.log(message : &quot;Resultado &quot;+respuesta.resultado);
	this.log(message : &quot;Contenido &quot;+respuesta.contenido);
	String token = (String)respuesta.contenido;
	this.assertTrue(b : respuesta.resultado==OK); 
	this.log(message : &quot;&quot;); 

	this.log(message : &quot;Test fachada.getFile()&quot;);
	respuesta = fachada.getFile(token : token);
	this.log(message : &quot;Resultado &quot;+respuesta.resultado);
	String fileName = &quot;ArchivoAdjunto_&quot; + &apos;now&apos;.format(mask : &quot;yyyyMMddhhmmsss&quot;) + &quot;.pdf&quot;;
	Binary fileBinary = (Binary) respuesta.contenido;
	BinaryFile.writeFromBinaryTo(data : fileBinary, name : &quot;c:\\&quot;+fileName, append : false);
	this.assertTrue(b : respuesta.resultado==OK);
	this.log(message : &quot;&quot;); 
}

this.pause(milliseconds : 100);

/*
this.log(message : &quot;Test fachada.deleteFile()&quot;);
respuesta = fachada.deleteFile(token : token);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
token = (String)respuesta.contenido;
this.log(message : &quot;&quot;); 
*/





</sourceCode>
		</method>
		<method name="testFEstadoAgendamiento" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NEstadoAgendamiento objNegocio;
FEstadoAgendamiento fachada = new FEstadoAgendamiento();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NEstadoAgendamiento)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NEstadoAgendamiento)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NEstadoAgendamiento)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFEstadoSolicitud" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NEstadosSolicitud objNegocio;
FEstadosSolicitud fachada = new FEstadosSolicitud();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NEstadosSolicitud)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NEstadosSolicitud)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NEstadosSolicitud)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFGerenteCompras" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NGerenteCompras objNegocio;
FGerenteCompras fachada = new FGerenteCompras();
int id; 
NSociedades sociedades; 
NLineaProducto linea; 
String gerenteCompras;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.lineaProducto.id = 1;
objNegocio.gerenteCompras = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NGerenteCompras)respuesta.contenido;
id = objNegocio.id;
linea.id  = objNegocio.lineaProducto.id;
gerenteCompras = objNegocio.gerenteCompras;
this.log(message : &quot;ID &quot; + id + &quot; SSO_ID &quot; + sociedades.id + &quot; CPR_ID &quot; + linea.id + &quot; Gerente &quot; + gerenteCompras );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo(vigencia: false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NGerenteCompras)respuesta.contenido;
id = objNegocio.id;
linea.id  = objNegocio.lineaProducto.id;
gerenteCompras = objNegocio.gerenteCompras;
this.log(message : &quot;ID &quot; + id + &quot; SSO_ID &quot; + sociedades.id + &quot; CPR_ID &quot; + linea.id + &quot; Gerente &quot; + gerenteCompras );
this.log(message : &quot;&quot;);

NSolicitud solicitud = NSolicitud();
solicitud.categoriaProducto.id = linea.id ;
NSolicitudSociedades soc = NSolicitudSociedades();
soc.id = 1;
soc.idSociedad = sociedades.id;
solicitud.sociedades.extend(sociedad : soc);

this.log(message : &quot;Test fachada.getValueForIdCpr()&quot;);
respuesta = fachada.getValueForIdLpr(solicitud : solicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NGerenteCompras)respuesta.contenido;
id = objNegocio.id;
linea.id  = objNegocio.lineaProducto.id;
gerenteCompras = objNegocio.gerenteCompras;
this.log(message : &quot;ID &quot; + id + &quot; SSO_ID &quot; + sociedades.id + &quot; CPR_ID &quot; + linea.id + &quot; Gerente &quot; + gerenteCompras );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFInstanciaAproProyecto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NInstanciaAproProyecto objNegocio;
FInstanciaAproProyecto fachada = new FInstanciaAproProyecto();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NInstanciaAproProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NInstanciaAproProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NInstanciaAproProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFLineaProducto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
FLineaProducto fachada = new FLineaProducto();
NLineaProducto objNegocio2;
int id; 
String codigo;
String descripcion;
NLineaProducto objNegocio;
objNegocio.id = 1;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NLineaProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NLineaProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NLineaProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFListaAntecedentes" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NListaAntecedentes objNegocio;
NSolicitud objNegocioSolicitud;

FListaAntecedentes fachada = new FListaAntecedentes();
FSolicitud solicitud = new FSolicitud();

int id;
int idSol;
int idCso;
int idCar;
int idMfp;
int idTor;
int idEag;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.areaSolicitante = &quot;ttt&quot;;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;idSol &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.id = 0;
objNegocio.idSolicitud = idSol;
objNegocio.tipoCesta.id = null;
objNegocio.numeroCesta = 1;
objNegocio.numeroContrato = 1;
objNegocio.montoAdjPesos = 1;
objNegocio.montoAdjDolares = 1;
objNegocio.montoAdjEuros = 1;
objNegocio.saldoContPesos = 1;
objNegocio.saldoContDolares = 1;
objNegocio.saldoContEuros = 1;
//objNegocio.perContAntFechaInicio = ;
//objNegocio.perContAntFechaFin = ;


respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NListaAntecedentes)respuesta.contenido;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
//objNegocio.id = 1;
//objNegocio.idSolicitud = 2;
objNegocio.tipoCesta.id = null;
objNegocio.numeroCesta = 1;
objNegocio.numeroContrato = 1;
objNegocio.montoAdjPesos = 1;
objNegocio.montoAdjDolares = 1;
objNegocio.montoAdjEuros = 1;
objNegocio.saldoContPesos = 1;
objNegocio.saldoContDolares = 1;
objNegocio.saldoContEuros = 1;
//objNegocio.perContAntFechaInicio = &apos;now&apos;;
//objNegocio.perContAntFechaFin = &apos;now&apos;;

respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : objNegocio.id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NListaAntecedentes)respuesta.contenido;
id = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : objNegocio.id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFListaComprasParticulares" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NListaComprasParticulares objNegocio;
FListaComprasParticulares fachada = FListaComprasParticulares();
int id; 
String codigo;
String descripcion;

this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NListaComprasParticulares)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NListaComprasParticulares)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NListaComprasParticulares)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFMoneda" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NMoneda objNegocio;
FMoneda fachada = new FMoneda();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMoneda)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMoneda)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMoneda)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFMotivoFueraProceso" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NMotivoFueraProceso objNegocio;
FMotivoFueraProceso fachada = new FMotivoFueraProceso();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoFueraProceso)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoFueraProceso)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoFueraProceso)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFMotivoProveedorCond" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NMotivoProveedorCond objNegocio;
FMotivoProveedorCond fachada = new FMotivoProveedorCond();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoProveedorCond)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoProveedorCond)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoProveedorCond)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFMotivoStandBy" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NMotivoStandBy objNegocio;
FMotivoStandBy fachada = new FMotivoStandBy();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoStandBy)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoStandBy)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NMotivoStandBy)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFNombreProyecto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NNombreProyecto objNegocio;
FNombreProyecto fachada = new FNombreProyecto();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NNombreProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NNombreProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NNombreProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFPedidoCesta" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NPedidoCesta objNegocio;
FPedidoCesta fachada = new FPedidoCesta();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NPedidoCesta)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NPedidoCesta)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NPedidoCesta)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFProveedor" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
Respuesta respuesta2;
NProveedor objNegocio;
FProveedor fachada = new FProveedor();
int id; 

NSolicitud objNegocio2;
FSolicitud fachada2 = new FSolicitud();
NSolicitudEstado objNegocio3;
FSolicitudEstado fachada3 = new FSolicitudEstado();


this.log(message : &quot;Test fachada2.setValue()&quot;);
respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.getLastValue()&quot;);
respuesta2 = fachada2.getLastValue();
this.assertTrue(b : respuesta2.resultado==OK);
objNegocio2 = (NSolicitud)respuesta2.contenido;
id = objNegocio2.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

//solicitudEstado
this.log(message : &quot;Ingreso solicitudEstado&quot;);
objNegocio3.idSolicitud = id;
objNegocio3.idEstadoSolicitud = 1;
objNegocio3.usuarioAlta = &quot;Test&quot;;
respuesta2 = fachada3.setValue(objNegocio : objNegocio3);
respuesta2 = fachada3.getLastValue();
objNegocio3 = (NSolicitudEstado)respuesta2.contenido;
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = id;
respuesta = fachada.setValue(objNegocio : objNegocio, solicitudNueva : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NProveedor)respuesta.contenido;
id = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + id  );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


//deleteSolicitudEstado
this.log(message : &quot;Test fachada3.deleteValue() (SolicitudEstado)&quot;);
respuesta2 = fachada3.deleteValue(id : objNegocio3.id);

this.log(message : &quot;Test fachada2.deleteValue()&quot;);
respuesta2 = fachada2.deleteValue(id : id);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFProyectoMayor" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NProyectoMayor objNegocio;
FProyectoMayor fachada = new FProyectoMayor();

NSolicitud objNegocioSolicitud;
FSolicitud solicitud = new FSolicitud();

int idSolicitud;
int id;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = 1;
objNegocioSolicitud.categoriaProducto.id = 1;
objNegocioSolicitud.destinoCompra.id = 1;
//objNegocio.estado.id = 1;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = 1;
objNegocioSolicitud.subtipoProducto.id = 1;
objNegocioSolicitud.tipoCompra.id = 1;
respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSolicitud = objNegocioSolicitud.id;
this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);

//-----------

objNegocio.idSolicitud = idSolicitud;
objNegocio.tipoProyecto.id = null;
objNegocio.rubroProyecto.id = null;
objNegocio.nombreProyecto.id = null;
objNegocio.instanciaAproProyecto.id = null;
this.log(message : &quot;Test fachada.setValue()&quot;);
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NProyectoMayor)respuesta.contenido;
id = objNegocio.id;

this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NProyectoMayor)respuesta.contenido;
id = objNegocio.id;

this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

</sourceCode>
		</method>
		<method name="testFProyectosAsociados" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NProyectosAsociados objNegocio;
FProyectosAsociados fachada = new FProyectosAsociados();

NSolicitud objNegocioSolicitud;
FSolicitud solicitud = new FSolicitud();

int idSolicitud;
int id;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = 1;
objNegocioSolicitud.categoriaProducto.id = 1;
objNegocioSolicitud.destinoCompra.id = 1;
//objNegocio.estado.id = 1;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = 1;
objNegocioSolicitud.subtipoProducto.id = 1;
objNegocioSolicitud.tipoCompra.id = 1;
respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSolicitud = objNegocioSolicitud.id;
this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);


objNegocio.idSolicitud = idSolicitud;
this.log(message : &quot;Test fachada.setValue()&quot;);
respuesta = fachada.setValue(objNegocio : objNegocio, solicitudNueva : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NProyectosAsociados)respuesta.contenido;

this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : objNegocio.idSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NProyectosAsociados)respuesta.contenido;

this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : objNegocio.idSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

</sourceCode>
		</method>
		<method name="testFRecomendacionSAGI" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
Respuesta respuesta2;
NRecomendacionSAGI objNegocio;
FRecomendacionSAGI fachada = new FRecomendacionSAGI();
int id, idSolicitud; 

NSolicitud objNegocio2;
FSolicitud fachada2 = new FSolicitud();
NSolicitudEstado objNegocio3;
FSolicitudEstado fachada3 = new FSolicitudEstado();


this.log(message : &quot;Test fachada2.setValue()&quot;);
respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.getLastValue()&quot;);
respuesta2 = fachada2.getLastValue();
this.assertTrue(b : respuesta2.resultado==OK);
objNegocio2 = (NSolicitud)respuesta2.contenido;
idSolicitud = objNegocio2.id;
this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.getLastValueForRol()&quot;);
respuesta2 = fachada.getLastValueForRol(rol : &quot;TPC - Analista CdG&quot;, idSol : idSolicitud);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

//solicitudEstado
this.log(message : &quot;Ingreso solicitudEstado&quot;);
objNegocio3.idSolicitud = idSolicitud;
objNegocio3.idEstadoSolicitud = 1;
objNegocio3.usuarioAlta = &quot;Test&quot;;
respuesta2 = fachada3.setValue(objNegocio : objNegocio3);
respuesta2 = fachada3.getLastValue();
objNegocio3 = (NSolicitudEstado)respuesta2.contenido;
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSolicitud;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NRecomendacionSAGI)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NRecomendacionSAGI)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id  );
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValuesForIdSolicitud()&quot;);
respuesta = fachada.getListValuesForIdSolicitud(idSolicitud : idSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


//deleteSolicitudEstado
this.log(message : &quot;Test fachada3.deleteValue() (SolicitudEstado)&quot;);
respuesta2 = fachada3.deleteValue(id : objNegocio3.id);

this.log(message : &quot;Test fachada2.deleteValue()&quot;);
respuesta2 = fachada2.deleteValue(id : id);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFResolucion" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NResolucion objNegocio;
NSolicitud objNegocioSolicitud;

FResolucion fachada = new FResolucion();
FSolicitud solicitud = new FSolicitud();

int id, idSolicitud;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
//objNegocioSolicitud.areaGestorSte.id = 1;
objNegocioSolicitud.categoriaCesta.id = 1;
objNegocioSolicitud.categoriaProducto.id = 1;
objNegocioSolicitud.destinoCompra.id = 1;
//objNegocio.estado.id = 1;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = 1;
objNegocioSolicitud.subtipoProducto.id = 1;
objNegocioSolicitud.tipoCompra.id = 1;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSolicitud = objNegocioSolicitud.id;
this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSolicitud;
objNegocio.requisitoCompras = &quot;T&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResolucion)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResolucion)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValuesForIdSolicitud()&quot;);
respuesta = fachada.getListValuesForIdSolicitud(idSolicitud : idSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFResolucionParticipantes" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NResolucionParticipantes objNegocio;
NSolicitud objNegocioSolicitud;
NResolucion objNegocioResolucion;
FResolucionParticipantes fachada = new FResolucionParticipantes();
FSolicitud solicitud = new FSolicitud();
FResolucion resolucion = new FResolucion();

int id, idSolicitud, idResolucion;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.id = 0;
respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSolicitud = objNegocioSolicitud.id;
this.log(message : &quot;idSolicitud &quot; + idSolicitud);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test resolucion.setValue()&quot;);
objNegocioResolucion.id = 0;
objNegocioResolucion.idSolicitud = idSolicitud;
respuesta = resolucion.setValue(objNegocio : objNegocioResolucion);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test resolucion.getLastValue()&quot;);
respuesta = resolucion.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioResolucion = (NResolucion)respuesta.contenido;
idResolucion = objNegocioResolucion.id;
this.log(message : &quot;idSolicitud &quot; + idResolucion);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.id = 0;
objNegocio.idResolucion = idResolucion;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResolucionParticipantes)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResolucionParticipantes)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFResultadoResolucion" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NResultadoResolucion objNegocio;
FResultadoResolucion fachada = new FResultadoResolucion();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResultadoResolucion)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResultadoResolucion)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues(tipo : &quot;&quot;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo(tipo : &quot;&quot;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NResultadoResolucion)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues(tipo : &quot;&quot;);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFRubroProyecto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NRubroProyecto objNegocio;
FRubroProyecto fachada = new FRubroProyecto();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NRubroProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NRubroProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NRubroProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFSituacionPresupuestaria" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NSituacionPresupuestaria objNegocio;
NSolicitud objNegocioSolicitud;

FSituacionPresupuestaria fachada = new FSituacionPresupuestaria();
FSolicitud solicitud = new FSolicitud();

int idSol;
int idCso;
int idCar;
int idMfp;
int idTor;
int idEag;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSol;
objNegocio.montoImpPresEjerPesos = 1;
objNegocio.montoImpPresEjerDolares = 1;
objNegocio.montoImpPresEjerEuros = 1;
objNegocio.contempladoPresupuesto = &quot;S&quot;;
objNegocio.contempladoPdc = &quot;S&quot;;
objNegocio.montoPresPesos = 1;
objNegocio.montoPresDolares = 1;
objNegocio.montoPresEuros = 1;
objNegocio.montoPdcPesos = 1;
objNegocio.montoPdcDolares = 1;
objNegocio.montoPdcEuros = 1;
objNegocio.premisasPresupuesto = &quot;TEST&quot;;
objNegocio.gastoRealAcumPesos = 1;
objNegocio.gastoRealAcumDolares = 1;
objNegocio.gastoRealAcumEuros = 1;
objNegocio.gastoRealProyPesos = 1;
objNegocio.gastoRealProyDolares = 1;
objNegocio.gastoRealProyEuros = 1;
objNegocio.existeDesvio = true;
objNegocio.planAccionDesvio = &quot;TEST PLAN&quot;;
objNegocio.montoInvEjPesos = 1;
objNegocio.montoInvEjDolares = 1;
objNegocio.montoInvEjEuros = 1;


respuesta = fachada.setValue(objNegocio : objNegocio, nuevaSolicitud : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSituacionPresupuestaria)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;idSolicitud &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSituacionPresupuestaria)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);</sourceCode>
		</method>
		<method name="testFSociedades" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NSociedades objNegocio;
FSociedades fachada = new FSociedades();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSociedades)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSociedades)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSociedades)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFSolicitud" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
Respuesta respuesta2;
NSolicitud objNegocio;
FSolicitud fachada = new FSolicitud();
int id; 

NSolicitudEstado objNegocio2;
FSolicitudEstado fachada2 = new FSolicitudEstado();


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioAlta = &quot;TEST&quot;;


respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitud)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

//solicitudEstado

this.log(message : &quot;Ingreso solicitudEstado&quot;);
objNegocio2.idSolicitud = id;
objNegocio2.idEstadoSolicitud = 1;
objNegocio2.usuarioAlta = &quot;Test&quot;;
respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
respuesta2 = fachada2.getLastValue();
objNegocio2 = (NSolicitudEstado)respuesta2.contenido;
this.log(message : &quot;Resultado &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);



this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitud)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id  );
this.log(message : &quot;&quot;);


//deleteSolicitudEstado

this.log(message : &quot;Test fachada2.deleteValue() (SolicitudEstado)&quot;);
respuesta2 = fachada2.deleteValue(id : objNegocio2.id);
this.log(message : &quot;Resultado &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido &quot;+respuesta2.contenido);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFSolicitudDocumentos" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NSolicitudDocumentos objNegocio;
FSolicitudDocumentos fachada = new FSolicitudDocumentos();
int id; 

Respuesta respuesta2;
NSolicitud objNegocio2;
FSolicitud fachada2 = new FSolicitud();

//genero Solicitud
objNegocio2.usuarioAlta = &quot;TEST&quot;;

respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);
this.log(message : &quot;Test fachada2.setValue()&quot;);
this.log(message : &quot;Test fachada2.getLastValue()&quot;);

respuesta2 = fachada2.getLastValue();
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
objNegocio2 = (NSolicitud)respuesta2.contenido;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioAlta = &quot;TEST&quot;;
objNegocio.idSolicitud = objNegocio2.id;
objNegocio.idTipoDocumento = 1;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitudDocumentos)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);




this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitudDocumentos)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.deleteValue()&quot;);
respuesta2 = fachada2.deleteValue(id : objNegocio2.id);
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFSolicitudEstado" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NSolicitudEstado objNegocio;
FSolicitudEstado fachada = new FSolicitudEstado();
int id; 

Respuesta respuesta2;
NSolicitud objNegocio2;
FSolicitud fachada2 = new FSolicitud();

//genero Solicitud
objNegocio2.usuarioAlta = &quot;TEST&quot;;

respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);
this.log(message : &quot;Test fachada2.setValue()&quot;);
this.log(message : &quot;Test fachada2.getLastValue()&quot;);

respuesta2 = fachada2.getLastValue();
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
objNegocio2 = (NSolicitud)respuesta2.contenido;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioAlta = &quot;TEST&quot;;
objNegocio.idEstadoSolicitud = 1;
objNegocio.idSolicitud = objNegocio2.id;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitudEstado)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);




this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitudEstado)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValueHist()&quot;);
respuesta = fachada.deleteValueHist(sesId : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.deleteValue()&quot;);
respuesta2 = fachada2.deleteValue(id : objNegocio2.id);
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFSolicitudSociedades" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NSolicitudSociedades objNegocio;
FSolicitudSociedades fachada = new FSolicitudSociedades();
int id; 

Respuesta respuesta2;
NSolicitud objNegocio2;
FSolicitud fachada2 = new FSolicitud();

Respuesta respuesta3;
NSociedades objNegocio3;
FSociedades fachada3 = new FSociedades();

//genero Solicitud
objNegocio2.usuarioAlta = &quot;TEST&quot;;
//objNegocio2.areaGestorSte.id = null;
objNegocio2.categoriaCesta.id = null;
objNegocio2.categoriaProducto.id = null;
objNegocio2.destinoCompra.id = null;
objNegocio2.pedidoCesta.id = null;
objNegocio2.subtipoProducto.id = null;
objNegocio2.tipoCompra.id = null;

this.log(message : &quot;Test fachada2.setValue()&quot;);
respuesta2 = fachada2.setValue(objNegocio : objNegocio2);
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.getLastValue()&quot;);
respuesta2 = fachada2.getLastValue();
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
objNegocio2 = (NSolicitud)respuesta2.contenido;


this.log(message : &quot;Test fachada3.setValue()&quot;);
respuesta3 = fachada3.setValue(objNegocio : objNegocio3);
this.log(message : &quot;Resultado3 &quot;+respuesta3.resultado);
this.log(message : &quot;Contenido3 &quot;+respuesta3.contenido);
this.assertTrue(b : respuesta3.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada3.getLastValue()&quot;);
respuesta3 = fachada3.getLastValue();
this.log(message : &quot;Resultado3 &quot;+respuesta3.resultado);
this.log(message : &quot;Contenido3 &quot;+respuesta3.contenido);
this.assertTrue(b : respuesta3.resultado==OK);
objNegocio3 = (NSociedades)respuesta3.contenido;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioAlta = &quot;TEST&quot;;
objNegocio.idSociedad = objNegocio3.id;
objNegocio.idSolicitud = objNegocio2.id;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitudSociedades)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);




this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSolicitudSociedades)respuesta.contenido;
id = objNegocio.id;
this.log(message : &quot;id &quot; + id);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada2.deleteValue()&quot;);
respuesta2 = fachada2.deleteValue(id : objNegocio2.id);
this.log(message : &quot;Resultado2 &quot;+respuesta2.resultado);
this.log(message : &quot;Contenido2 &quot;+respuesta2.contenido);
this.assertTrue(b : respuesta2.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFSubtipoProducto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NSubtipoProducto objNegocio;
FSubtipoProducto fachada = new FSubtipoProducto();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSubtipoProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSubtipoProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NSubtipoProducto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFTipoCompra" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NTipoCompra objNegocio;
FTipoCompra fachada = new FTipoCompra();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoCompra)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoCompra)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoCompra)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFTipoDocumento" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NTipoDocumento objNegocio;
FTipoDocumento fachada = new FTipoDocumento();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoDocumento)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoDocumento)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoDocumento)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFTipoOrden" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NTipoOrden objNegocio;
FTipoOrden fachada = new FTipoOrden();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoOrden)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoOrden)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoOrden)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFTipoProveedor" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NTipoProveedor objNegocio;
FTipoProveedor fachada = new FTipoProveedor();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoProveedor)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoProveedor)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoProveedor)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);</sourceCode>
		</method>
		<method name="testFTipoProyecto" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NTipoProyecto objNegocio;
FTipoProyecto fachada = new FTipoProyecto();
int id; 
String codigo;
String descripcion;


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.codigo = &quot;COD_PRUEBA&quot;;
objNegocio.descripcion = &quot;DES_PRUEBA_INSERT&quot;;
objNegocio.usuarioAlta = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForCodigo()&quot;);
respuesta = fachada.getValueForCodigo(codigo : codigo);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValuesCombo()&quot;);
respuesta = fachada.getListValuesCombo();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.descripcion = &quot;DES_PRUEBA_UPDATE&quot;;
objNegocio.usuarioModificacion = &quot;TEST&quot;;
respuesta = fachada.setValue(objNegocio : objNegocio);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NTipoProyecto)respuesta.contenido;
id = objNegocio.id;
codigo = objNegocio.codigo;
descripcion = objNegocio.descripcion;
this.log(message : &quot;id &quot; + id + &quot; codigo &quot; + codigo + &quot; descripcion &quot; + descripcion );
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : id);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
</sourceCode>
		</method>
		<method name="testFValoracionNecesidad" flags="clientavailable public">
			<sourceCode language="Java1">Respuesta respuesta;
NValoracionNecesidad objNegocio;
NSolicitud objNegocioSolicitud;

FValoracionNecesidad fachada = new FValoracionNecesidad();
FSolicitud solicitud = new FSolicitud();

int idSol;
int idCso;
int idCar;
int idMfp;
int idTor;
int idEag;

this.log(message : &quot;Test solicitud.setValue()&quot;);
objNegocioSolicitud.usuarioAlta = &quot;TEST&quot;;
objNegocioSolicitud.categoriaCesta.id = null;
objNegocioSolicitud.categoriaProducto.id = null;
objNegocioSolicitud.destinoCompra.id = null;
objNegocioSolicitud.gestorEnlace = &quot;TEST&quot;;
objNegocioSolicitud.pedidoCesta.id = null;
objNegocioSolicitud.subtipoProducto.id = null;
objNegocioSolicitud.tipoCompra.id = null;

respuesta = solicitud.setValue(objNegocio : objNegocioSolicitud);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test solicitud.getLastValue()&quot;);
respuesta = solicitud.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocioSolicitud = (NSolicitud)respuesta.contenido;
idSol = objNegocioSolicitud.id;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.setValue()&quot;);
objNegocio.idSolicitud = idSol;
objNegocio.beneficioCompra = &quot;TEST&quot;;
objNegocio.recurrencia = true;
objNegocio.periodicidadCompra = &quot;Test&quot;;
objNegocio.regularizacion = true;
objNegocio.motivoRegularizacion = &quot;TEST&quot;;
objNegocio.comentarioRegAdm = &quot;TEST&quot;;
objNegocio.compraMargMod = true;
objNegocio.motivoCompraMargMod = &quot;S&quot;;
objNegocio.infoGastosPedido = &quot;S&quot;;
objNegocio.alcanceFijo = true;
objNegocio.alcanceMovil = true;
objNegocio.descFijoMovil = &quot;TEST&quot;;


respuesta = fachada.setValue(objNegocio : objNegocio, nuevaSolicitud : false);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;idSolicitud: &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getLastValue()&quot;);
respuesta = fachada.getLastValue();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NValoracionNecesidad)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;idSolicitud &quot; + idSol);
this.log(message : &quot;&quot;);

this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getValueForId()&quot;);
respuesta = fachada.getValueForId(id : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
objNegocio = (NValoracionNecesidad)respuesta.contenido;
idSol = objNegocio.idSolicitud;
this.log(message : &quot;id &quot; + idSol);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.deleteValue()&quot;);
respuesta = fachada.deleteValue(id : idSol);
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+respuesta.contenido);
this.assertTrue(b : respuesta.resultado==OK);
this.log(message : &quot;&quot;);


this.log(message : &quot;Test fachada.getListValues()&quot;);
respuesta = fachada.getListValues();
this.log(message : &quot;Resultado &quot;+respuesta.resultado);
this.log(message : &quot;Contenido &quot;+ ((Any[]) respuesta.contenido).length());
this.assertTrue(b : respuesta.resultado==OK);</sourceCode>
		</method>
	</methods>
</component>
