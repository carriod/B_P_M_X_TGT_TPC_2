<?xml version="1.0" encoding="UTF-8"?>
<?fuego version="6.5.2" build="100141"?>
<component name="FListaAntecedentes" description="" versionID="Version 5.7 GA" flags="cloneable replaceable" type="xobject">
	<inherit class="Any" flags="public"/>
	<inherit class="Fuego.Internal.FuegoObject" flags="public hidden"/>
	<inherit class="Fuego.Internal.XODelegate" flags="public delegated hidden"/>
	<objectProperty name="generateBitSets" value="true"/>
	<objectProperty name="generateStubs" value="true"/>
	<objectProperty name="packagePrefix" value="xobject"/>
	<attributes>
		<object type="Servicio.SListaAntecedentes" name="servicio" flags="hassetter hasgetter public includeincheck" position="1"/>
	</attributes>
	<methods>
		<method name="FListaAntecedentes" flags="static clientavailable">
			<outputArgument name="return" description="" flags="retval" type="Fachada.FListaAntecedentes"/>
			<sourceCode language="Java1">this.servicio = new SListaAntecedentes();</sourceCode>
		</method>
		<method name="deleteValue" flags="public server disableclient">
			<arg name="id" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.deleteValue(id : arg.id);
	if (respuesta.resultado == OK) {
		Any[String] objArray = (Any[String])respuesta.contenido;
    	respuesta.contenido = this.mapeoArrayToNegocio(objArray : objArray);
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.deleteValue(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="deleteValuesForIdSolicitud" flags="clientavailable public">
			<arg name="idSolicitud" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.deleteValuesForIdSolicitud(idSolicitud : arg.idSolicitud);
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.deleteValuesForIdSolicitud(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getDatosComplementarios" flags="clientavailable public">
			<arg name="listaAntecedentes" description="" flags="in" type="Negocio.NListaAntecedentes"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	if(arg.listaAntecedentes.tipoCesta.id != null){
		respuesta = FTipoCesta.getValueForId(id : arg.listaAntecedentes.tipoCesta.id);
		if (respuesta.resultado == OK) {
			arg.listaAntecedentes.tipoCesta = ((NTipoCesta) respuesta.contenido);
		}else{
			return respuesta;
		}
	}
	if(arg.listaAntecedentes.montoAdjOM.id != null){
		respuesta = FMoneda.getValueForId(id : arg.listaAntecedentes.montoAdjOM.id);
		if (respuesta.resultado == OK) {
			arg.listaAntecedentes.montoAdjOM = ((NMoneda) respuesta.contenido);
		}else{
			return respuesta;
		}
	}	
	if(arg.listaAntecedentes.saldoContOM.id != null){
		respuesta = FMoneda.getValueForId(id : arg.listaAntecedentes.saldoContOM.id);
		if (respuesta.resultado == OK) {
			arg.listaAntecedentes.saldoContOM = ((NMoneda) respuesta.contenido);
		}else{
			return respuesta;
		}
	}		
} 
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getDatosComplementarios(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getLastValue" flags="public server disableclient">
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getLastValue();
	if (respuesta.resultado == OK) {
		Any[String] objArray = (Any[String])respuesta.contenido;
    	respuesta.contenido = this.mapeoArrayToNegocio(objArray : objArray);
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getLastValue(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getListValues" flags="public server disableclient">
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getListValues(vigencia : false);
	if (respuesta.resultado == OK) {
		Any[] valuesArray = (Any[])respuesta.contenido;	
		Any[] objNegocioArray;
		for (Any valueArray : valuesArray) {
		    Any[String] objArray = (Any[String])valueArray;
		    objNegocioArray[] = this.mapeoArrayToNegocio(objArray : objArray);
		}
    	respuesta.contenido = objNegocioArray;
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getListValues(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getListValuesCombo" flags="clientavailable public">
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getListValues(vigencia : true);
	if (respuesta.resultado == OK) {
		Any[] valuesArray = (Any[])respuesta.contenido;	
		String[Integer] comboItem;
		for (Any valueArray : valuesArray) {
		    Any[String] objArray = (Any[String])valueArray;
		    
		    String codigo = (String)objArray[&quot;CODIGO&quot;];
		    String descripcion = (String)objArray[&quot;DESCRIPCION&quot;];
		    
			//comboItem[(Integer)objArray[&quot;ID&quot;]] = (codigo!=null?codigo:&quot;&quot;) + (codigo!=null&amp;&amp;descripcion!=null?&quot; - &quot;:&quot;&quot;) + (descripcion!=null?descripcion:&quot;&quot;);
			comboItem[(Integer)objArray[&quot;ID&quot;]] = (descripcion!=null?descripcion:&quot;&quot;);
		}
    	respuesta.contenido = comboItem;
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getListValues(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;
</sourceCode>
		</method>
		<method name="getListValuesForIdSolicitud" flags="clientavailable public">
			<arg name="idSolicitud" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getListValuesForIdSolicitud(idSolicitud : arg.idSolicitud);
	if (respuesta.resultado == OK) {
		Any[] valuesArray = (Any[])respuesta.contenido;	
		Any[] objNegocioArray;
		for (Any valueArray : valuesArray) {
		    Any[String] objArray = (Any[String])valueArray;
		    objNegocioArray[] = this.mapeoArrayToNegocio(objArray : objArray);
		}
    	respuesta.contenido = objNegocioArray;
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getListValues(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getValueForId" description="" flags="public server disableclient">
			<arg name="id" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getValueForId(id : arg.id);
	if (respuesta.resultado == OK) {
		Any[String] objArray = (Any[String])respuesta.contenido;
    	respuesta.contenido = this.mapeoArrayToNegocio(objArray : objArray);
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getValueForId(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="mapeoArrayToNegocio" flags="clientavailable public">
			<arg name="objArray" description="" flags="in" type="Any[String]"/>
			<outputArgument name="return" description="" flags="retval" type="Negocio.NListaAntecedentes"/>
			<sourceCode language="Java1">NListaAntecedentes objNegocio = NListaAntecedentes();

objNegocio.id = (Integer)arg.objArray[&quot;ID&quot;];
objNegocio.idSolicitud = (Integer)arg.objArray[&quot;SOL_ID&quot;];
objNegocio.tipoCesta.id = (Integer)arg.objArray[&quot;TCE_ID&quot;];
objNegocio.numeroCesta = (Decimal)arg.objArray[&quot;NUMEROCESTA&quot;];
objNegocio.numeroContrato = (Long)arg.objArray[&quot;NUMEROCONTRATO&quot;];
objNegocio.montoAdjPesos = (Decimal)arg.objArray[&quot;MONTOADJPESOS&quot;];
objNegocio.montoAdjDolares = (Decimal)arg.objArray[&quot;MONTOADJDOLARES&quot;];
objNegocio.montoAdjEuros = (Decimal)arg.objArray[&quot;MONTOADJEUROS&quot;];
objNegocio.montoAdjOM.id = (Integer)arg.objArray[&quot;MON_ID_MONTOADJ&quot;]; 
objNegocio.montoAdjOtro = (Decimal)arg.objArray[&quot;MONTOADJOTRO&quot;];
objNegocio.saldoContPesos = (Decimal)arg.objArray[&quot;SALDOCONTPESOS&quot;];
objNegocio.saldoContDolares = (Decimal)arg.objArray[&quot;SALDOCONTDOLARES&quot;];
objNegocio.saldoContEuros = (Decimal)arg.objArray[&quot;SALDOCONTEUROS&quot;];
objNegocio.saldoContOM.id = (Integer)arg.objArray[&quot;MON_ID_SALDOCONT&quot;]; 
objNegocio.saldoContOtro = (Decimal)arg.objArray[&quot;SALDOCONTOTRO&quot;];
objNegocio.perContAntFechaInicio = (Time)arg.objArray[&quot;PERCONTANTFECHAINICIO&quot;];
objNegocio.perContAntFechaFin = (Time)arg.objArray[&quot;PERCONTANTFECHAFIN&quot;];

return objNegocio;</sourceCode>
		</method>
		<method name="setValue" description="" flags="public server disableclient">
			<arg name="objNegocio" description="" flags="in" type="Negocio.NListaAntecedentes"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.setValue( id : arg.objNegocio.id,
										idSolicitud : arg.objNegocio.idSolicitud,
										tipoCesta : arg.objNegocio.tipoCesta,
										numeroCesta : arg.objNegocio.numeroCesta, 
										numeroContrato : arg.objNegocio.numeroContrato, 
	                       				montoAdjPesos : arg.objNegocio.montoAdjPesos,
	                       				montoAdjDolares : arg.objNegocio.montoAdjDolares,
	                       				montoAdjEuros : arg.objNegocio.montoAdjEuros,
	                       				montoAdjOM : arg.objNegocio.montoAdjOM.id,
	                       				montoAdjOtro : arg.objNegocio.montoAdjOtro, 
	                      				saldoContPesos : arg.objNegocio.saldoContPesos,
	                      				saldoContDolares : arg.objNegocio.saldoContDolares,
	                      				saldoContEuros : arg.objNegocio.saldoContEuros,
	                      				saldoContOM : arg.objNegocio.saldoContOM.id,
	                      				saldoContOtro : arg.objNegocio.saldoContOtro, 
	                      				perContAntFechaInicio : arg.objNegocio.perContAntFechaInicio,
	                      				perContAntFechaFin : arg.objNegocio.perContAntFechaFin);
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.setValue(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
	</methods>
</component>
