<?xml version="1.0" encoding="UTF-8"?>
<?fuego version="6.5.2" build="101122"?>
<component name="FComentario2" description="" versionID="Version 5.7 GA" flags="cloneable replaceable" type="xobject">
	<inherit class="Any" flags="public"/>
	<inherit class="Fuego.Internal.FuegoObject" flags="public hidden"/>
	<inherit class="Fuego.Internal.XODelegate" flags="public delegated hidden"/>
	<objectProperty name="generateBitSets" value="true"/>
	<objectProperty name="generateStubs" value="true"/>
	<objectProperty name="packagePrefix" value="xobject"/>
	<attributes>
		<object type="Servicio2.SComentario2" name="servicio" flags="hassetter hasgetter public includeincheck" position="1"/>
	</attributes>
	<methods>
		<method name="FComentario2" flags="static clientavailable">
			<outputArgument name="return" description="" flags="retval" type="Fachada2.FComentario2"/>
			<sourceCode language="Java1">this.servicio = new SComentario2();</sourceCode>
		</method>
		<method name="deleteValue" flags="public server disableclient">
			<arg name="id" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.deleteValue(id : arg.id);
	if (respuesta.resultado == OK) {
		Any[String] objArray = (Any[String])respuesta.contenido;
    	respuesta.contenido = this.mapeoArrayToNegocio(objArray : objArray);
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.deleteValue(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getLastValue" flags="public server disableclient">
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getLastValue();
	if (respuesta.resultado == OK) {
		Any[String] objArray = (Any[String])respuesta.contenido;
    	respuesta.contenido = this.mapeoArrayToNegocio(objArray : objArray);
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getLastValue(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getListValues" flags="public server disableclient">
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getListValues(vigencia : false);
	if (respuesta.resultado == OK) {
		Any[] valuesArray = (Any[])respuesta.contenido;	
		Any[] objNegocioArray;
		for (Any valueArray : valuesArray) {
		    Any[String] objArray = (Any[String])valueArray;
		    objNegocioArray[] = this.mapeoArrayToNegocio(objArray : objArray);
		}
    	respuesta.contenido = objNegocioArray;
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getListValues(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getListValuesForIdProceso" flags="clientavailable public">
			<arg name="procesoId" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getListValuesForIdProceso(procesoId : arg.procesoId);
	if (respuesta.resultado == OK) {
		Any[] valuesArray = (Any[])respuesta.contenido;	
		Any[] objNegocioArray;
		for (Any valueArray : valuesArray) {
		    Any[String] objArray = (Any[String])valueArray;
		    objNegocioArray[] = this.mapeoArrayToNegocio(objArray : objArray);
		}
    	respuesta.contenido = objNegocioArray;
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getListValuesForIdSolicitud(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="getValueForId" description="" flags="public server disableclient">
			<arg name="id" description="" flags="in" type="Int"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try {
	respuesta = this.servicio.getValueForId(id : arg.id);
	if (respuesta.resultado == OK) {
		Any[String] objArray = (Any[String])respuesta.contenido;
		respuesta.contenido = this.mapeoArrayToNegocio(objArray : objArray);
    }
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.getValueForId(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
		<method name="mapeoArrayToNegocio" flags="clientavailable public">
			<arg name="objArray" description="" flags="in" type="Any[String]"/>
			<outputArgument name="return" description="" flags="retval" type="Negocio2.NComentario2"/>
			<sourceCode language="Java1">NComentario2 objNegocio = NComentario2();

objNegocio.id = (Integer)arg.objArray[&quot;ID&quot;];
objNegocio.idProceso = (Integer)arg.objArray[&quot;PRO_ID&quot;];
objNegocio.edicionProceso = (Integer)arg.objArray[&quot;PRO_EDICION&quot;];
objNegocio.comentario = (String)arg.objArray[&quot;COMENTARIO&quot;];
objNegocio.fecha = (Time)arg.objArray[&quot;FECHA&quot;];
objNegocio.usuario = (String)arg.objArray[&quot;USUARIO&quot;];
objNegocio.tipo = (String)arg.objArray[&quot;TIPO&quot;];
objNegocio.fechaAlta = (Time)arg.objArray[&quot;FECHAALTA&quot;];

return objNegocio;</sourceCode>
		</method>
		<method name="setValue" description="" flags="public server disableclient">
			<arg name="objNegocio" description="" flags="in" type="Negocio2.NComentario2"/>
			<outputArgument name="return" description="" flags="retval" type="Utiles.Respuesta"/>
			<sourceCode language="Java1">Respuesta respuesta;

try { 
	respuesta = this.servicio.setValue(procesoId : arg.objNegocio.idProceso, 
									   comentario : arg.objNegocio.comentario, 
									   usuario : arg.objNegocio.usuario, 
									   fecha : arg.objNegocio.fecha, 
	                       			   id : arg.objNegocio.id, 
	                       			   procesoEdicion : arg.objNegocio.edicionProceso, 
	                       			   tipo : arg.objNegocio.tipo);
}
catch (Java.Lang.Exception e) {
    respuesta.resultado = DBERROR;
    respuesta.contenido = &quot;fachada.setValue(): Error &quot; + e.message;
    Utiles.Logger.logException(exception : e);
}
return respuesta;</sourceCode>
		</method>
	</methods>
</component>
