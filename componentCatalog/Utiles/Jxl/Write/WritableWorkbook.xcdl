<?xml version="1.0" encoding="UTF-8"?>
<?fuego version="6.5.2" build="101201"?>
<component name="WritableWorkbook" description="WritableWorkbook" versionID="Version 6.5 " flags="abstract" signature="jxl.write.WritableWorkbook" type="java">
	<inherit class="Java.Lang.Object" flags="public"/>
	<objectProperty name="javaClassName" value="jxl.write.WritableWorkbook"/>
	<objectProperty name="package" value="jxl.write"/>
	<objectProperty name="typeId" value="jxl.write.WritableWorkbook"/>
	<attributes>
		<object type="Utiles.Jxl.Write.WritableFont" name="ARIAL_10_PT" flags="hasgetter attribute static external final" position="7" javaType="jxl.write.WritableFont" writeSignature="AARIAL_10_PT;Ljxl.write.WritableFont;" readSignature="AARIAL_10_PT;Ljxl.write.WritableFont;"/>
		<object type="Utiles.Jxl.Write.WritableCellFormat" name="HIDDEN_STYLE" flags="hasgetter attribute static external final" position="11" javaType="jxl.write.WritableCellFormat" writeSignature="AHIDDEN_STYLE;Ljxl.write.WritableCellFormat;" readSignature="AHIDDEN_STYLE;Ljxl.write.WritableCellFormat;"/>
		<object type="Utiles.Jxl.Write.WritableFont" name="HYPERLINK_FONT" flags="hasgetter attribute static external final" position="8" javaType="jxl.write.WritableFont" writeSignature="AHYPERLINK_FONT;Ljxl.write.WritableFont;" readSignature="AHYPERLINK_FONT;Ljxl.write.WritableFont;"/>
		<object type="Utiles.Jxl.Write.WritableCellFormat" name="HYPERLINK_STYLE" flags="hasgetter attribute static external final" position="10" javaType="jxl.write.WritableCellFormat" writeSignature="AHYPERLINK_STYLE;Ljxl.write.WritableCellFormat;" readSignature="AHYPERLINK_STYLE;Ljxl.write.WritableCellFormat;"/>
		<object type="Utiles.Jxl.Write.WritableCellFormat" name="NORMAL_STYLE" flags="hasgetter attribute static external final" position="9" javaType="jxl.write.WritableCellFormat" writeSignature="ANORMAL_STYLE;Ljxl.write.WritableCellFormat;" readSignature="ANORMAL_STYLE;Ljxl.write.WritableCellFormat;"/>
		<Int length="32" name="numberOfSheets" flags="hasgetter external" primitive="true" position="1" javaType="int" readSignature="MgetNumberOfSheets()I"/>
		<object type="Java.Io.File" name="outputFile" flags="hassetter external" position="2" javaType="java.io.File" writeSignature="MsetOutputFile(Ljava.io.File;)V"/>
		<Bool name="protected" flags="hassetter external" primitive="true" position="3" javaType="boolean" writeSignature="MsetProtected(Z)V"/>
		<array type="String" name="rangeNames" flags="hasgetter external" primitive="true" position="4" javaType="java.lang.String[]" readSignature="MgetRangeNames()[Ljava.lang.String;"/>
		<array type="String" name="sheetNames" flags="hasgetter external" primitive="true" position="5" javaType="java.lang.String[]" readSignature="MgetSheetNames()[Ljava.lang.String;"/>
		<array type="Utiles.Jxl.Write.WritableSheet" name="sheets" flags="hasgetter external" primitive="true" position="6" javaType="jxl.write.WritableSheet[]" readSignature="MgetSheets()[Ljxl.write.WritableSheet;"/>
	</attributes>
	<methods>
		<method name="addNameArea" description="addNameArea" flags="abstract external" signature="MaddNameArea(Ljava.lang.String;Ljxl.write.WritableSheet;IIII)V">
			<arg name="arg1" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<arg name="arg2" description="" flags="in external" type="Utiles.Jxl.Write.WritableSheet" javaType="jxl.write.WritableSheet"/>
			<arg name="arg3" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg4" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg5" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg6" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
		</method>
		<method name="close" description="close" flags="abstract external" signature="Mclose()V">
			<exception type="Java.Io.IOException"/>
			<exception type="Utiles.Jxl.Write.WriteException"/>
		</method>
		<method name="copy" description="copy" flags="external" signature="Mcopy(Ljxl.Workbook;)V">
			<arg name="w" description="" flags="in external" type="Utiles.Jxl.Workbook" javaType="jxl.Workbook"/>
		</method>
		<method name="copySheet" description="copySheet" flags="abstract external" signature="McopySheet(ILjava.lang.String;I)V">
			<arg name="arg1" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg2" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<arg name="arg3" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
		</method>
		<method name="copySheet" description="copySheet" flags="abstract external" signature="McopySheet(Ljava.lang.String;Ljava.lang.String;I)V">
			<arg name="arg1" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<arg name="arg2" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<arg name="arg3" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
		</method>
		<method name="createSheet" description="createSheet" flags="abstract external" signature="McreateSheet(Ljava.lang.String;I)Ljxl.write.WritableSheet;">
			<arg name="arg1" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<arg name="arg2" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<outputArgument name="return" description="" flags="retval external" type="Utiles.Jxl.Write.WritableSheet" javaType="jxl.write.WritableSheet"/>
		</method>
		<method name="findByName" description="findByName" flags="abstract external" signature="MfindByName(Ljava.lang.String;)[Ljxl.Range;">
			<arg name="arg1" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<outputArgument name="return" description="" flags="retval external" primitive="true" type="Utiles.Jxl.Range[]" javaType="jxl.Range[]"/>
		</method>
		<method name="findCellByName" description="findCellByName" flags="abstract external" signature="MfindCellByName(Ljava.lang.String;)Ljxl.write.WritableCell;">
			<arg name="arg1" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<outputArgument name="return" description="" flags="retval external" type="Utiles.Jxl.Write.WritableCell" javaType="jxl.write.WritableCell"/>
		</method>
		<method name="getNumberOfSheets" description="getNumberOfSheets" flags="abstract external hidden" signature="MgetNumberOfSheets()I">
			<outputArgument name="return" description="" flags="retval external" primitive="true" type="Int" javaType="int"/>
		</method>
		<method name="getRangeNames" description="getRangeNames" flags="abstract external hidden" signature="MgetRangeNames()[Ljava.lang.String;">
			<outputArgument name="return" description="" flags="retval external" primitive="true" type="String[]" javaType="java.lang.String[]"/>
		</method>
		<method name="getSheet" description="getSheet" flags="abstract external" signature="MgetSheet(Ljava.lang.String;)Ljxl.write.WritableSheet;">
			<arg name="arg1" description="" flags="in external" type="String" javaType="java.lang.String"/>
			<outputArgument name="return" description="" flags="retval external" type="Utiles.Jxl.Write.WritableSheet" javaType="jxl.write.WritableSheet"/>
		</method>
		<method name="getSheet" description="getSheet" flags="abstract external" signature="MgetSheet(I)Ljxl.write.WritableSheet;">
			<arg name="arg1" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<outputArgument name="return" description="" flags="retval external" type="Utiles.Jxl.Write.WritableSheet" javaType="jxl.write.WritableSheet"/>
			<exception type="Java.Lang.IndexOutOfBoundsException"/>
		</method>
		<method name="getSheetNames" description="getSheetNames" flags="abstract external hidden" signature="MgetSheetNames()[Ljava.lang.String;">
			<outputArgument name="return" description="" flags="retval external" primitive="true" type="String[]" javaType="java.lang.String[]"/>
		</method>
		<method name="getSheets" description="getSheets" flags="abstract external hidden" signature="MgetSheets()[Ljxl.write.WritableSheet;">
			<outputArgument name="return" description="" flags="retval external" primitive="true" type="Utiles.Jxl.Write.WritableSheet[]" javaType="jxl.write.WritableSheet[]"/>
		</method>
		<method name="moveSheet" description="moveSheet" flags="abstract external" signature="MmoveSheet(II)Ljxl.write.WritableSheet;">
			<arg name="arg1" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg2" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<outputArgument name="return" description="" flags="retval external" type="Utiles.Jxl.Write.WritableSheet" javaType="jxl.write.WritableSheet"/>
		</method>
		<method name="removeSheet" description="removeSheet" flags="abstract external" signature="MremoveSheet(I)V">
			<arg name="arg1" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
		</method>
		<method name="setColourRGB" description="setColourRGB" flags="abstract external" signature="MsetColourRGB(Ljxl.format.Colour;III)V">
			<arg name="arg1" description="" flags="in external" type="Utiles.Jxl.Format.Colour" javaType="jxl.format.Colour"/>
			<arg name="arg2" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg3" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
			<arg name="arg4" description="" flags="in external" primitive="true" type="Int" javaType="int"/>
		</method>
		<method name="setOutputFile" description="setOutputFile" flags="abstract external hidden" signature="MsetOutputFile(Ljava.io.File;)V">
			<arg name="arg1" description="" flags="in external" type="Java.Io.File" javaType="java.io.File"/>
			<exception type="Java.Io.IOException"/>
		</method>
		<method name="setProtected" description="setProtected" flags="abstract external hidden" signature="MsetProtected(Z)V">
			<arg name="arg1" description="" flags="in external" primitive="true" type="Bool" javaType="boolean"/>
		</method>
		<method name="write" description="write" flags="abstract external" signature="Mwrite()V">
			<exception type="Java.Io.IOException"/>
		</method>
	</methods>
</component>
